{"version":3,"sources":["reducers/navDirReducer.js","utils/shuffle.js","contexts/ApiContext.js","components/Quiz/Questionnaire/SingleQuestion/SingleQuestion.jsx","components/Quiz/Questionnaire/Results/Results.jsx","components/Quiz/Questionnaire/Navigation/Navigation.jsx","components/Quiz/Questionnaire/Questionnaire.jsx","components/Quiz/SelectQuestions/SelectQuestions.jsx","components/Quiz/Quiz.jsx","App.jsx","index.js"],"names":["navDirReducer","state","action","type","shuffle","array","tmp","current","top","length","Math","floor","random","ApiContext","createContext","ApiContextProvider","props","useState","trivia_amount","trivia_category","trivia_difficulty","trivia_type","apiSelection","setApiSelection","apiStatus","setApiStatus","quizArr","setQuizArr","userSelection","setUserSelection","useReducer","navPosition","dispatchNavDir","quizCards","setQuizCards","quizfinished","setQuizfinished","quizResults","setQuizResults","reviewMode","setReviewMode","getApi","useEffect","answers","map","quiz","incorrect_answers","correct_answer","answer","tempArr","i","push","category","difficulty","question","Provider","value","handleAgainBtn","handleReviewBtn","fetchApi","fetch","then","response","json","data","results","setResultPercentage","reduce","card","correctAnswers","percentage","total","children","SingleQuestion","useContext","className","dangerouslySetInnerHTML","__html","window","innerWidth","option","key","style","display","name","checked","readOnly","onClick","handleSelection","htmlFor","Results","round","Navigation","Questionnaire","role","SelectQuestions","min","max","onChange","e","target","preventDefault","Quiz","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe9db781.chunk.js","sourcesContent":["\r\nexport const navDirReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'NEXT':\r\n      return state + 1\r\n    case 'PREV':\r\n      return state > 0 ? state - 1 : state\r\n    case 'RESTART':\r\n      return 0\r\n    default:\r\n      return state;\r\n  }\r\n} ","// TYPICAL SHUFFLE FUNCTION\r\nconst shuffle = (array) => {\r\n  var tmp,\r\n    current,\r\n    top = array.length;\r\n  if (top)\r\n    while (--top) {\r\n      current = Math.floor(Math.random() * (top + 1));\r\n      tmp = array[current];\r\n      array[current] = array[top];\r\n      array[top] = tmp;\r\n    }\r\n  return array;\r\n};\r\n\r\nexport default shuffle","\r\nimport React, { createContext, useState, useReducer, useEffect } from 'react';\r\nimport { navDirReducer } from '../reducers/navDirReducer'\r\nimport shuffle from '../utils/shuffle';\r\n\r\nexport const ApiContext = createContext();\r\n\r\nconst ApiContextProvider = (props) => {\r\n  const [apiSelection, setApiSelection] = useState(\r\n    {\r\n      trivia_amount: '10',\r\n      trivia_category: 'any',\r\n      trivia_difficulty: 'any',\r\n      trivia_type: 'any'\r\n    }\r\n  );\r\n  const [apiStatus, setApiStatus] = useState(false)\r\n  const [quizArr, setQuizArr] = useState([])\r\n  const [userSelection, setUserSelection] = useState({})\r\n  const [navPosition, dispatchNavDir] = useReducer(navDirReducer, 0)\r\n  const [quizCards, setQuizCards] = useState([])\r\n  const [quizfinished, setQuizfinished] = useState(false)\r\n  const [quizResults, setQuizResults] = useState(0)\r\n  const [reviewMode, setReviewMode] = useState(false)\r\n\r\n  const fetchApi = () => {\r\n    fetch(getApi())\r\n      .then((response) => response.json())\r\n      .then((data) => setQuizArr(data.results));\r\n  }\r\n  const getApi = () => {\r\n    const { trivia_amount, trivia_category, trivia_difficulty, trivia_type } = apiSelection\r\n    return 'https://opentdb.com/api.php?amount=' + trivia_amount + (trivia_category !== 'any' ? '&category=' + trivia_category : '') + (trivia_difficulty !== 'any' ? '&difficulty=' + trivia_difficulty : '') + (trivia_type !== 'any' ? '&type=' + trivia_type : '')\r\n  }\r\n  useEffect(() => {\r\n    let answers = quizArr.map((quiz) => [\r\n      ...quiz.incorrect_answers,\r\n      quiz.correct_answer,\r\n    ]);\r\n    answers.map((answer) => shuffle(answer));\r\n\r\n    let tempArr = []\r\n    for (let i = 0; i < quizArr.length; i++) {\r\n      tempArr.push({\r\n        category: quizArr[i].category,\r\n        correct_answer: quizArr[i].correct_answer,\r\n        difficulty: quizArr[i].difficulty,\r\n        question: quizArr[i].question,\r\n        answers: answers[i],\r\n      })\r\n    }\r\n    setQuizCards(tempArr)\r\n  }, [quizArr]);\r\n\r\n  const setResultPercentage = () => {\r\n    quizArr.reduce(card => card.correct_answer === 0);\r\n    let correctAnswers = 0;\r\n    for (let i = 0; i < quizArr.length; i++) {\r\n      if (quizArr[i].correct_answer === userSelection[i]) {\r\n        correctAnswers++;\r\n      }\r\n    }\r\n    setQuizfinished(true)\r\n    setQuizResults({ percentage: correctAnswers / quizArr.length * 100, total: quizArr.length, correctAnswers })\r\n  }\r\n\r\n  const handleAgainBtn = () => {\r\n    setQuizfinished(false);\r\n    setApiStatus(false);\r\n    setUserSelection(false);\r\n    setQuizCards([]);\r\n    dispatchNavDir({ type: 'RESTART' });\r\n    setReviewMode(false)\r\n  };\r\n\r\n  const handleReviewBtn = () => {\r\n    setQuizfinished(false);\r\n    dispatchNavDir({ type: 'RESTART' });\r\n    setReviewMode(true)\r\n  };\r\n\r\n\r\n  return (\r\n    <ApiContext.Provider value={{ reviewMode, setReviewMode, quizResults, handleAgainBtn, handleReviewBtn, quizCards, setQuizCards, fetchApi, apiSelection, setApiSelection, getApi, apiStatus, setApiStatus, quizArr, setQuizArr, userSelection, setUserSelection, navPosition, dispatchNavDir, setResultPercentage, quizfinished, setQuizfinished }}>\r\n      {props.children}\r\n    </ApiContext.Provider>\r\n  );\r\n}\r\n\r\nexport default ApiContextProvider;","import React from 'react';\r\nimport { ApiContext } from '../../../../contexts/ApiContext';\r\nimport { useContext } from 'react';\r\n\r\nconst SingleQuestion = () => {\r\n  const {\r\n    quizCards,\r\n    navPosition,\r\n    userSelection,\r\n    setUserSelection,\r\n    reviewMode,\r\n  } = useContext(ApiContext);\r\n\r\n  const handleSelection = (navPosition, option) => {\r\n    if (!userSelection[navPosition])\r\n      setUserSelection({\r\n        ...userSelection,\r\n        [navPosition]: option,\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex justify-content-between \">\r\n        <div>\r\n          <p\r\n            className=\"m-0\"\r\n            dangerouslySetInnerHTML={{\r\n              __html: `${quizCards[navPosition].category}`,\r\n            }}\r\n          ></p>\r\n          <p\r\n            className=\"h5 question-title\"\r\n            dangerouslySetInnerHTML={{\r\n              __html: `${quizCards[navPosition].question}`,\r\n            }}\r\n          />\r\n        </div>\r\n        <p className=\"counter ml-2\">\r\n          {window.innerWidth >= 400\r\n            ? `${navPosition + 1} out of ${quizCards.length}`\r\n            : `${navPosition + 1}/${quizCards.length}`}\r\n        </p>\r\n      </div>\r\n      <form className={reviewMode ? 'pointer-events-none' : ''}>\r\n        {quizCards[navPosition].answers.map((option) => (\r\n          <div className=\"form-check p-0\" key={option}>\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              style={{ display: 'none' }}\r\n              name={option}\r\n              checked={\r\n                userSelection[navPosition]\r\n                  ? userSelection[navPosition] === option\r\n                  : false\r\n              }\r\n              readOnly\r\n            />\r\n            <label\r\n              onClick={() => handleSelection(navPosition, option)}\r\n              className={\r\n                userSelection[navPosition]\r\n                  ? option === quizCards[navPosition].correct_answer\r\n                    ? 'form-check-label btn btn-outline-secondary w-100 my-1 correct'\r\n                    : 'form-check-label btn btn-outline-secondary w-100 my-1 incorrect'\r\n                  : 'form-check-label btn btn-outline-secondary w-100 my-1'\r\n              }\r\n              htmlFor={option}\r\n              dangerouslySetInnerHTML={{ __html: `${option}` }}\r\n            />\r\n          </div>\r\n        ))}\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleQuestion;\r\n","import React from 'react';\r\nimport { ApiContext } from '../../../../contexts/ApiContext';\r\nimport { useContext } from 'react';\r\n\r\nconst Results = () => {\r\n  const { handleReviewBtn, handleAgainBtn, quizResults } = useContext(\r\n    ApiContext\r\n  );\r\n  const { percentage, total, correctAnswers } = quizResults;\r\n\r\n  return (\r\n    <div className=\"text-center\">\r\n      <div className=\"h4 my-4\">You finished the Quiz!</div>\r\n      <div className=\"h5\">\r\n        You're result was:{' '}\r\n        <span className={percentage >= 50 ? 'text-success' : 'text-danger'}>\r\n          {Math.round(percentage * 100) / 100}%,\r\n        </span>\r\n      </div>\r\n      <div className=\"p\">{`or ${correctAnswers} ${\r\n        correctAnswers === 1 ? 'correct answer' : 'correct answers'\r\n      } out of ${total} questions`}</div>\r\n      <button\r\n        className=\"btn btn-info text-white m-3\"\r\n        onClick={() => {\r\n          handleReviewBtn();\r\n        }}\r\n      >\r\n        Review Results!\r\n      </button>\r\n      <button\r\n        className=\"btn btn-info text-white m-3\"\r\n        onClick={() => {\r\n          handleAgainBtn();\r\n        }}\r\n      >\r\n        Try again!\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n","import React from 'react';\r\nimport { ApiContext } from '../../../../contexts/ApiContext';\r\nimport { useContext } from 'react';\r\nconst Navigation = () => {\r\n  const {\r\n    navPosition,\r\n    dispatchNavDir,\r\n    quizCards,\r\n    setResultPercentage,\r\n    reviewMode,\r\n  } = useContext(ApiContext);\r\n\r\n  return (\r\n    <div className=\"navdir mt-3\">\r\n      {navPosition !== 0 ? (\r\n        <button\r\n          className=\"btn btn-info text-white prev\"\r\n          onClick={() => {\r\n            dispatchNavDir({ type: 'PREV' });\r\n          }}\r\n        >\r\n          Previous\r\n        </button>\r\n      ) : (\r\n        <></>\r\n      )}\r\n\r\n      {navPosition < quizCards.length - 1 ? (\r\n        <button\r\n          className=\"btn btn-info text-white next\"\r\n          onClick={() => {\r\n            dispatchNavDir({ type: 'NEXT' });\r\n          }}\r\n        >\r\n          Next\r\n        </button>\r\n      ) : (\r\n        <button\r\n          className=\"btn btn-info text-white next\"\r\n          onClick={() => {\r\n            setResultPercentage();\r\n          }}\r\n        >\r\n          {reviewMode ? 'Return' : 'Submit'}\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport { ApiContext } from '../../../contexts/ApiContext';\r\nimport { useContext } from 'react';\r\nimport SingleQuestion from './SingleQuestion/SingleQuestion';\r\nimport Results from './Results/Results';\r\nimport Navigation from './Navigation/Navigation';\r\n\r\nconst Questionnaire = () => {\r\n  const { quizCards, quizfinished } = useContext(ApiContext);\r\n\r\n  return (\r\n    <div className=\"card\" style={{}}>\r\n      <div className=\"card-body\">\r\n        {quizCards.length > 0 ? (\r\n          <>\r\n            {!quizfinished ? (\r\n              <>\r\n                <SingleQuestion />\r\n                <Navigation />\r\n              </>\r\n            ) : (\r\n              <Results />\r\n            )}\r\n          </>\r\n        ) : (\r\n          <div className=\"text-center\">\r\n            <div\r\n              className=\"spinner-border text-primary text-center\"\r\n              role=\"status\"\r\n            >\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Questionnaire;\r\n","import React, { useContext } from 'react';\r\nimport { ApiContext } from '../../../contexts/ApiContext';\r\n\r\nconst SelectQuestions = () => {\r\n  const { fetchApi, apiSelection, setApiSelection, setApiStatus } = useContext(\r\n    ApiContext\r\n  );\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n    setApiStatus(true);\r\n    fetchApi();\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\" style={{}}>\r\n      <div className=\"card-body\">\r\n        <form>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"trivia_amount\">Number of Questions:</label>\r\n            <input\r\n              type=\"number\"\r\n              name=\"trivia_amount\"\r\n              className=\"form-control\"\r\n              min=\"1\"\r\n              max=\"50\"\r\n              // defaultValue=\"10\"\r\n              value={apiSelection.trivia_amount}\r\n              onChange={(e) =>\r\n                setApiSelection({\r\n                  ...apiSelection,\r\n                  trivia_amount: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"trivia_category\">Select Category:</label>\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"trivia_category\"\r\n              value={apiSelection.trivia_category}\r\n              onChange={(e) =>\r\n                setApiSelection({\r\n                  ...apiSelection,\r\n                  trivia_category: e.target.value,\r\n                })\r\n              }\r\n            >\r\n              <option value=\"any\">Any Category</option>\r\n              <option value=\"9\">General Knowledge</option>\r\n              <option value=\"10\">Entertainment: Books</option>\r\n              <option value=\"11\">Entertainment: Film</option>\r\n              <option value=\"12\">Entertainment: Music</option>\r\n              <option value=\"13\">Entertainment: Musicals &amp; Theatres</option>\r\n              <option value=\"14\">Entertainment: Television</option>\r\n              <option value=\"15\">Entertainment: Video Games</option>\r\n              <option value=\"16\">Entertainment: Board Games</option>\r\n              <option value=\"17\">Science &amp; Nature</option>\r\n              <option value=\"18\">Science: Computers</option>\r\n              <option value=\"19\">Science: Mathematics</option>\r\n              <option value=\"20\">Mythology</option>\r\n              <option value=\"21\">Sports</option>\r\n              <option value=\"22\">Geography</option>\r\n              <option value=\"23\">History</option>\r\n              <option value=\"24\">Politics</option>\r\n              <option value=\"25\">Art</option>\r\n              <option value=\"26\">Celebrities</option>\r\n              <option value=\"27\">Animals</option>\r\n              <option value=\"28\">Vehicles</option>\r\n              <option value=\"29\">Entertainment: Comics</option>\r\n              <option value=\"30\">Science: Gadgets</option>\r\n              <option value=\"31\">\r\n                Entertainment: Japanese Anime &amp; Manga\r\n              </option>\r\n              <option value=\"32\">\r\n                Entertainment: Cartoon &amp; Animations\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"trivia_difficulty\">Select Difficulty: </label>\r\n            <select\r\n              name=\"trivia_difficulty\"\r\n              className=\"form-control\"\r\n              value={apiSelection.trivia_difficulty}\r\n              onChange={(e) =>\r\n                setApiSelection({\r\n                  ...apiSelection,\r\n                  trivia_difficulty: e.target.value,\r\n                })\r\n              }\r\n            >\r\n              <option value=\"any\">Any Difficulty</option>\r\n              <option value=\"easy\">Easy</option>\r\n              <option value=\"medium\">Medium</option>\r\n              <option value=\"hard\">Hard</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"trivia_type\">Select Type: </label>\r\n            <select\r\n              name=\"trivia_type\"\r\n              className=\"form-control\"\r\n              value={apiSelection.trivia_type}\r\n              onChange={(e) =>\r\n                setApiSelection({\r\n                  ...apiSelection,\r\n                  trivia_type: e.target.value,\r\n                })\r\n              }\r\n            >\r\n              &gt;\r\n              <option value=\"any\">Any Type</option>\r\n              <option value=\"multiple\">Multiple Choice</option>\r\n              <option value=\"boolean\">True / False</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group mt-4\">\r\n            <input\r\n              className=\"w-100 btn btn-info text-white\"\r\n              type=\"submit\"\r\n              value=\"START!\"\r\n              onClick={submitForm}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectQuestions;\r\n","import React from 'react';\r\nimport Questionnaire from './Questionnaire/Questionnaire';\r\nimport SelectQuestions from './SelectQuestions/SelectQuestions';\r\nimport { ApiContext } from '../../contexts/ApiContext';\r\nimport { useContext } from 'react';\r\n\r\nconst Quiz = () => {\r\n  const { apiStatus } = useContext(ApiContext);\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"display-4 mb-4  mt-3 text-center\">Quiz App</h1>\r\n      {!apiStatus ? <SelectQuestions /> : <Questionnaire />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport Quiz from './components/Quiz/Quiz';\r\nimport ApiContextProvider from './contexts/ApiContext';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <ApiContextProvider>\r\n        <Quiz />\r\n      </ApiContextProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}